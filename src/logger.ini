[formatters]
keys = short, long, short_debug

[formatter_short]
format = %(asctime)s [%(name)s] %(levelname)s %(message)s

[formatter_long]
format = %(asctime)s [%(name)s - %(funcName)s:%(lineno)d] %(levelname)s %(message)s

[formatter_short_debug]
format = %(asctime)s %(message)s

[handlers]
keys = console, file, console_debug, file_debug

[handler_console]
class = StreamHandler
level = INFO
formatter = short
args = (sys.stdout, )

[handler_file]
class = logging.handlers.TimedRotatingFileHandler
level = WARNING
formatter = short
args = (os.path.join(os.getcwd(), 'logs', 'log_info_' + __import__("datetime").datetime.now().strftime('%%Y-%%m-%%d') + '.log'), "D", 1, 7)

[handler_console_debug]
class = StreamHandler
level = DEBUG
formatter = short_debug
args = (sys.stdout, )

[handler_file_debug]
class = logging.handlers.TimedRotatingFileHandler
level = DEBUG
formatter = short_debug
args = (os.path.join(os.getcwd(), 'logs', 'log_info_' + __import__("datetime").datetime.now().strftime('%%Y-%%m-%%d') + '.log'), "D", 1, 7)

[loggers]
keys = root, errors, debug_only, image_recognition, objects_recognition

[logger_root]
level = INFO
handlers = file

[logger_image_recognition]
level = INFO
handlers = file, console
propagate = 0
qualname = image_recognition

[logger_objects_recognition]
level = INFO
handlers = file, console
propagate = 0
qualname = objects_recognition

[logger_errors]
level = ERROR
handlers = file, console
propagate = 0
qualname = errors

[logger_debug_only]
level = INFO
handlers = console_debug, file_debug
propagate = 0
qualname = debug_only